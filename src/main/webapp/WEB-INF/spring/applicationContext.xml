<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

	<context:property-placeholder
		location="classpath:properties.properties" />


	<!-- allows access to the system properties -->
	<bean id="propertyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName"
			value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="searchSystemEnvironment" value="true" />
	</bean>

	<!-- city -->

	<bean id="cityClient" class="city.client.YandexCityClient">
		<constructor-arg name="url" value="${geocoder.url}" />
		<constructor-arg name="key" value="${CITY_KEY}" />
		<constructor-arg name="format"
			value="${geocoder.format}" />
		<constructor-arg name="language"
			value="${geocoder.language}" />
	</bean>

	<bean id="cityService" class="city.service.CityServiceImpl"
		scope="prototype">
		<constructor-arg name="client" ref="cityClient" />
	</bean>

	<!-- weather -->

	<bean id="weatherClient"
		class="weather.client.YandexWeatherClient">
		<constructor-arg name="url" value="${weather.url}" />
		<constructor-arg name="key" value="${WEATHER_KEY}" />
		<constructor-arg name="language"
			value="${weather.language}" />
	</bean>

	<bean id="weatherRepository"
		class="weather.dao.WeatherRepositoryImpl"></bean>

	<bean id="weatherService"
		class="weather.service.WeatherServiceImpl" scope="prototype">
		<constructor-arg name="client" ref="weatherClient" />
		<constructor-arg name="repository"
			ref="weatherRepository" />
	</bean>

	<!-- outfit -->

	<bean id="outfitRepository"
		class="outfit.dao.OutfitRepositoryImpl" />

	<bean id="outiftService" class="outfit.service.OutfitServiceImpl"
		scope="prototype">
		<constructor-arg name="repository"
			ref="outfitRepository" />
	</bean>

</beans>